@{

    Layout = "~/Views/Shared/Acceuil.cshtml";
}
@section test{


    @model Domain.Entitee.Histo

    <html>
    <body>

        <div class="container">

            @using (Html.BeginForm("HistorisationAL", "Historisation", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="editor-label">
                    <br />
                    <div style="color: Purple;">
                        @Html.Label("Select Pole")
                    </div>
                    <div class="editor-field">
                        @if (ViewData.ContainsKey("pole"))
                        {
                            @Html.DropDownList("pole", ViewData["pole"] as List<SelectListItem>, new { @class = "form-control" })
                        }
                    </div>
                    <br />
                    <div style="color: Purple;">
                        @Html.Label("Select Site", new { style = "width:250px" })
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(t=>t.site, new SelectList(string.Empty, "Value", "Text"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(t => t.site, "", new { @class = "text-danger" })
                    </div>
                    <br />
                    <div style="color: Purple;">
                        @Html.Label("Select Mission", new { style = "width:250px" })
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(t=>t.mission, new SelectList(string.Empty, "Value", "Text"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(t => t.mission, "", new { @class = "text-danger" })
                    </div>
                    <br />
                    <div style="color: Purple;">
                        @Html.Label("Select Tâche", new { style = "width:250px" })
                    </div>
                    <div class="editor-field">
                        @Html.DropDownList("tache", new SelectList(string.Empty, "Value", "Text"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(t => t.tache, "", new { @class = "text-danger" })
                    </div>
                    <br />
                    <button type="submit" class="btn btn-primary" value="submit">Enregistrer</button>
                    <button type="reset" class="btn btn-default" value="annuler">Annuler</button>
                    
                </div>



            }
            @ViewBag.msg2
        </div>


        <script src="~/scripts/jquery-1.10.2.js" type="text/javascript"></script>
        <script src="~/scripts/jquery-1.10.2.min.js" type="text/javascript"></script>
        <script type="text/javascript">
    $(document).ready(function () {
        //Dropdownlist Selectedchange event
        $("#pole").change(function () {
            $("#site").empty();
            $("#mission").empty();
            $("#tache").empty();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetSite")', // we are calling json method
                dataType: 'json',
                data: { id: $("#pole").val()},
                success: function (site) {
                    // site contains the JSON formatted list
                    // of site passed from the controller
                    $.each(site, function (i, site) {
                        $("#site").append('<option value="' + site.Value + '">' + site.Text + '</option>');
                    }); // here we are adding option for Site
                },
                error: function (ex) {
                    alert('Failed to retrieve site.' + ex);
                }
            });
            return false;
        })
    });
        </script>
        <script type="text/javascript">
    $(document).ready(function () {
        //Dropdownlist Selectedchange event
        $("#site").change(function () {
            $("#mission").empty();
            $("#tache").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetMission")',
                dataType: 'json',
                data: { id: $("#site").val()},
                success: function (mission) {
                    // site contains the JSON formatted list
                    // of site passed from the controller
                    $.each(mission, function (i, mission) {
                        $("#mission").append('<option value="'
      + mission.Value + '">'
      + mission.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve site.' + ex);
                }
            });
            return false;
        })
    });
        </script>
        <script type="text/javascript">
    $(document).ready(function () {
        //Dropdownlist Selectedchange event
        $("#mission").change(function () {
            $("#tache").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetTache")',
                dataType: 'json',
                data: { id: $("#mission").val()},
                success: function (tache) {
                    // site contains the JSON formatted list
                    // of site passed from the controller
                    $.each(tache, function (i, tache) {
                        $("#tache").append('<option value="'
      + tache.Value + '">'
      + tache.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve site.' + ex);
                }
            });
            return false;
        })
    });
        </script>
        <script type="text/javascript">
        $(document).ready(function () {
        //Dropdownlist Selectedchange event
        $("#tache").change(function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetTacheValue")',
                dataType: 'json',
                data: { id: $("#tache").val()},

                }
           );
            return false;
        })
        });
        </script>
}
</body>
</html>
  